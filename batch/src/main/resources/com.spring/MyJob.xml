<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation=
           "http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="classpath:com.spring/common.xml" />

    <!-- Tasklet -->
<!--    <job id="MyJob1"-->
<!--         xmlns="http://www.springframework.org/schema/batch">-->
<!--        <description>-->
<!--            Tasklet 활용-->
<!--        </description>-->

<!--        <step id="MyStep1">-->
<!--            <description>-->
<!--                Tasklet은 대부분 반복적인 작업이 아니라 한 번의 실행만 필요한 경우에 사용한다.-->
<!--                (여기서 반복적인 작업이란 텍스트 파일을 한 줄씩 읽거나, DB에 쿼리를 날려 얻은 결과 set의 rows를 하나씩 읽는 것을 의미한다.)-->
<!--            </description>-->
<!--            <tasklet ref="MyTasklet" />-->
<!--        </step>-->
<!--    </job>-->

    <!-- scope는 빈을 어떻게 생성할지 결정하는데, scope="step"은 스텝이 실행될 때마다 개별적인 빈을 하나씩 만든다. 만약 scope가 없다면 default는 singleton으로 job 실행 시 생성되어 job이 끝날 때까지 공유된다. -->
    <bean id="MyTasklet" class="com.spring.MyTasklet" />

    <!-- Item -->
    <job id="MyJob2" xmlns="http://www.springframework.org/schema/batch">
        <description>
            DB의 테이블을 읽어 출력
        </description>

        <step id="MyStep2">
            <description>
                commit-interval은 writer가 한번에 처리할 양으로 reader로부터 받은 item 수가 commit-interval과 같아지면 writer가 작업한 후 다시 0부터 세며 반복하는 작업이다.
                (commit-interval="1"은 reader가 row를 넘겨줄 때마다 writer가 작업하는 것이다.)
            </description>

            <tasklet>
                <chunk reader="JdbcCursorItemReader" writer="MyItemWriter" commit-interval="1" />
            </tasklet>
        </step>
    </job>

    <bean id="MyItemWriter" class="com.spring.MyItemWriter" scope="step" />
    <bean id="MyRowMapper" class="com.spring.MyRowMapper" scope="step" />
    <bean id="JdbcCursorItemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
        <property name="dataSource" ref="dataSource" />
        <property name="rowMapper" ref="MyRowMapper" />
        <property name="sql">
            <value>
                <![CDATA[
				    SELECT * FROM employees where emp_no < 10101;
				]]>
            </value>
        </property>
    </bean>
</beans>